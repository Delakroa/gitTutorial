# Возьмем игру с инопланетными пришельцами, которые имеют разные цвета и при-
# носят разное количество очков игроку. В следующем простом словаре хранится
# информация об одном конкретном пришельце:

# alien_0 = {'color': 'green', 'points': 5}
# print(alien_0['color'])
# print(alien_0['points'])


# Теперь программа может получить значение, связанное с любым из ключей
# в alien_0: color или points. Если игрок сбивает корабль пришельца, для получения
# заработанных им очков может использоваться код следующего вида:

# alien_0 = {'color': 'green', 'points': 5}
# new_points = alien_0['points']
# print('Ты только что заработал ' + str(new_points) + ' points!')
# print('Ты только что заработал ' + str(alien_0['points']) + ' points') # мой варинат для понимания и закрепления

# -------------------------------------------------------------------------------------------------------------------

# Добавление новых пар "ключ - значение"

# Словари относятся к динамическим структурам данных: в словарь можно в любой
# момент добавлять новые пары «ключ—значение». Для этого указывается имя сло-
# варя, за которым в квадратных скобках следует новый ключ с новым значением.
# Добавим в словарь alien_0 еще два атрибута: координаты x и y для вывода изобра-
# жения пришельца в определенной позиции экрана. Допустим, пришелец должен
# отображаться у левого края экрана, в 25 пикселах от верхнего края. Так как система
# экранных координат обычно располагается в левом верхнем углу, для размещения
# пришельца у левого края координата x должна быть равна 0, а координата y — 25:

# alien_0 = {'color': 'green', 'points': 5}
# print(alien_0)
#
# alien_0['x_position'] = 0
# alien_0['y_position'] = 25
# print(alien_0)


# ---------------------------------------------------------------------------------------------------------------------

# Создание пустого словаря

# В некоторых ситуациях бывает удобно (или даже необходимо) начать с пустого
# словаря, а затем добавлять в него новые элементы. Чтобы начать заполнение пу-
# стого словаря, определите словарь с пустой парой фигурных скобок, а затем добав-
# ляйте новые пары «ключ—значение» (каждая пара в отдельной строке). Например,
# вот как строится словарь alien_0:

# alien_0 = {}
#
# alien_0['color'] = 'green'
# alien_0['points'] = 5
#
# print(alien_0)


# ------------------------------------------------------------------------------------------------------------------

# Изменение значений в словаре

# Чтобы изменить значение в словаре, укажите имя словаря с ключом в квадратных
# скобках, а затем новое значение, которое должно быть связано с этим ключом. До-
# пустим, в процессе игры цвет пришельца меняется с зеленого на желтый:

# alien_0 = {'color': 'green'}
# print("Пришелец сейчас " + alien_0['color'] + ".")
#
# alien_0['color'] = 'yelow'
# print('Пришелец сейчас ' + alien_0['color'] + '.')

# Ещё один пример поинтересней

alien_0 = {'x_position': 0, 'y_position': 25, 'speed': 'fast', }
print("Original x_position: " + str(alien_0['x_position']))
# Пришелец перемещается в право.
# Вычесляем величину смещения на основании текущей скорости.

# if alien_0['speed'] == 'slow':
#     x_increment = 1
# elif alien_0['speed'] == 'medium':
#     x_increment = 2
# else:
#     x_increment = 3  # Пришелец двигается быстро.
# alien_0['x_position'] = alien_0['x_position'] + x_increment  # Новая позиция равна сумме позиций иприращения.
# print("New x-position: " + str(alien_0['x_position']))


